-- EMPLOYESS (scott 계정의 emp 테이블 원본)
-- EMPLOYESS 전체 조회
SELECT * FROM EMPLOYEES e;
-- EMPLOYESS 의 first_name, last_name, job_id 조회
SELECT
	FIRST_NAME,
	LAST_NAME,
	JOB_ID
FROM
	EMPLOYEES e;

-- 사원번호가 176인 사원의 LAST_NAME, 부서번호 조회
SELECT e.LAST_NAME, e.DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE e.EMPLOYEE_ID = 176;

-- 연봉이 12000 이상 되는 직원들의 LAST_NAME 과 연봉 조회
SELECT e.LAST_NAME, e.SALARY 
FROM EMPLOYEES e 
WHERE e.SALARY >= 12000;

-- 연봉이 5000에서 12000 범위가 아닌 사람들의 LAST_NAME 과 연봉 조회

SELECT e.LAST_NAME, e.SALARY 
FROM EMPLOYEES e 
WHERE e.SALARY < 5000 OR e.SALARY > 12000;

-- 20번 혹은 50번 부서에서 근무하는 사원들의 last_name,부서번호를 조회
-- 단 이름의 오름차순, 부서의 오름차순으로 정렬
SELECT E.LAST_NAME, E.DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE E.DEPARTMENT_ID = 20 OR E.DEPARTMENT_ID = 50
ORDER BY E.LAST_NAME ASC, E.DEPARTMENT_ID  ASC;

SELECT E.LAST_NAME, E.DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE E.DEPARTMENT_ID IN (20,50)
ORDER BY E.LAST_NAME ASC, E.DEPARTMENT_ID  ASC;


-- 커미션을 버는 사원들의 last_name, salary, commission_pct 를 조회
-- 단 연봉의 내림차순, 커미션 내림차순으로 정렬
SELECT E.LAST_NAME, E.SALARY, E.COMMISSION_PCT 
FROM EMPLOYEES e 
WHERE E.COMMISSION_PCT > 0 ORDER BY E.SALARY DESC, E.COMMISSION_PCT DESC;


-- 연봉이 2500,3500,7000이 아니며 job_id 가 SA_REP OR ST_CLERK 인 사원 조회
SELECT *
FROM EMPLOYEES e 
WHERE E.SALARY NOT IN (2500,3500,7000) AND E.JOB_ID IN ('SA_REP','ST_CLERK');

-- 2018/02/20 ~ 2018/05/01 사이에 고용된 직원들의 LAST_NAME,EMPLOYEE_ID,고용일자(HIRE_DATE) 조회
SELECT E.LAST_NAME, E.EMPLOYEE_ID, E.HIRE_DATE 
FROM EMPLOYEES e 
WHERE E.HIRE_DATE >= '2018-02-20' AND E.HIRE_DATE <= '2018-05-01';

-- 2015년에 고용된 사원 조회

SELECT *
FROM EMPLOYEES e 
WHERE E.HIRE_DATE >= '2015-01-01' AND E.HIRE_DATE <= '2015-12-31';


-- BETWEEN A AND B
-- 20번 혹은 50번 부서에서 근무하며, 연봉이 5000 ~ 12000 사이인 직원들의 
-- FIRST_NAME, LAST_NAME, 연봉 조회(연봉 오름차순)

SELECT
	E.FIRST_NAME,
	E.LAST_NAME,
	E.SALARY
FROM
	EMPLOYEES e
WHERE
	E.DEPARTMENT_ID IN (20, 50)
	AND E.SALARY BETWEEN 5000 AND 12000
ORDER BY
	E.SALARY; 

-- 연봉이 5000 ~ 12000 사이가 아닌 직원들의 정보 조회
SELECT
	*
FROM
	EMPLOYEES e
WHERE	
	 E.SALARY NOT BETWEEN 5000 AND 12000


-- 2018/02/20 ~ 2018/05/01 사이에 고용된 직원들의 LAST_NAME,EMPLOYEE_ID,고용일자(HIRE_DATE) 조회
SELECT E.LAST_NAME, E.EMPLOYEE_ID, E.HIRE_DATE 
FROM EMPLOYEES e 
WHERE E.HIRE_DATE BETWEEN '2018-02-20' AND '2018-05-01';


-- LIKE
-- LAST_NAME 에 u 가 포함되는 사원들의 사번,last_name 조회
SELECT e.EMPLOYEE_ID, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '%u%';

-- LAST_NAME 의 네번째 글자가 a 인 사원들의 사번,last_name 조회
SELECT e.EMPLOYEE_ID, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '___a%';

-- LAST_NAME 에 a 혹은 e 글자가 포함되는 사원들의 사번,last_name 조회(단 last_name오름차순)
SELECT e.EMPLOYEE_ID, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '%a%' OR e.LAST_NAME LIKE '%e%' ORDER BY e.LAST_NAME;


-- LAST_NAME 에 a 와 e 글자가 포함되는 사원들의 사번,last_name 조회(단 last_name오름차순)
SELECT e.EMPLOYEE_ID, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '%a%e%' OR e.LAST_NAME LIKE '%e%a%' ORDER BY e.LAST_NAME;

SELECT e.EMPLOYEE_ID, e.LAST_NAME 
FROM EMPLOYEES e 
WHERE e.LAST_NAME LIKE '%a%' and e.LAST_NAME LIKE '%e%' ORDER BY e.LAST_NAME;


-- IS NULL
-- MANAGER_ID 가 없는 사원들의 LAST_NAME 및 JOB_ID 조회
SELECT E.LAST_NAME,E.JOB_ID 
FROM EMPLOYEES e 
WHERE E.MANAGER_ID IS NULL;


-- JOB_ID 가 ST_CLERK 가 아닌 사원이 없는 부서 조회
-- 단, 부서번호가 NULL 인 경우는 제외한다.
SELECT DISTINCT E.DEPARTMENT_ID 
FROM EMPLOYEES e 
WHERE JOB_ID NOT IN ('ST_CLERK') AND E.DEPARTMENT_ID IS NOT NULL;



-- COMMISSION_PCT 가 NULL 이 아닌 사원들 중에서 COMMISION = SALARY * COMMISION_PCT를 구한다
-- 사원번호, FIRST_NAME,JOB_ID와 함께 조회
SELECT E.EMPLOYEE_ID, E.FIRST_NAME, E.JOB_ID, E.SALARY * E.COMMISSION_PCT AS COMMISION 
FROM EMPLOYEES e 
WHERE E.COMMISSION_PCT IS NOT NULL;


-- 부서 80 의 사원에 적용 가능한 세율 표시하기
-- LAST_NAME, SALARY, TAX_RATE 출력
-- TAX_RATE 는 SALARY / 2000 으로 나눈 후 버림
--             해당 값이 0 이면 0.0 / 1, 0.09 / 2, 0.20 / 3, 0.30 / 4, 0.40 / 5, 0.42 / 6, 0.44 / 그 외 0.45


SELECT
	LAST_NAME,
	SALARY,
	DECODE(TRUNC(SALARY /2000),
		0, 0.00,
		1, 0.09,
		2, 0.20,
		3, 0.30,
		4, 0.40,
		5, 0.42,
		6, 0.44,
		0.45
	) AS TAX_RATE
FROM
	EMPLOYEES; 



-- 회사 내의 최대 연봉 및 최소 연봉의 차이를 출력
SELECT MAX(E.SALARY) - MIN(E.SALARY) AS SAL_GAP 
FROM EMPLOYEES e; 

-- 매니저로 근무하는 사원들의 총 숫자를 출력
SELECT COUNT(DISTINCT E.MANAGER_ID) AS 매니저수
FROM EMPLOYEES e; 


-- 매니저가 없는 사원들은 제외하고 매니저가 관리하는
-- 사원들 중에서 최소 급여를 받는 사원 조회
-- (매니저가 관리하는 사원 중에서 연봉이 6000 미만 제외)

SELECT
	MANAGER_ID,
	MIN(SALARY)
FROM
	EMPLOYEES e
GROUP BY
	MANAGER_ID
HAVING
	MANAGER_ID IS NOT NULL
	AND MIN(SALARY) >= 6000
ORDER BY
	MANAGER_ID; 

















